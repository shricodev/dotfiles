{
    "notebook.editorOptionsCustomizations": null,
    "workbench.settings.editor": "json",
    "launch": {
      "configurations": [],
      "compounds": []
    },
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.tabCompletion": "on",
    "editor.suggestSelection": "first",
    "apc.activityBar": {
      "position": "bottom",
      "hideSettings": true,
      "size": 28
    },
    "apc.electron": {
      "titleBarStyle": "hiddenInset",
      "trafficLightPosition": {
        "x": 12,
        "y": 10
      }
    },
    "apc.font.family": "Geist Mono",
    "apc.monospace.font.family": "Geist Mono",
    "apc.statusBar": {
      "position": "editor-bottom",
      "height": 28,
      "fontSize": 12
    },
    "apc.stylesheet": {
      ".sidebar > .composite": "height: 12px !important",
      ".title-label": "display: none !important",
      ".title-actions": "display: none !important",
      ".tabs-and-actions-container > .editor-actions": "display: none !important",
      ".titlebar-center": "display: none !important",
      ".titlebar-right": "display: none !important",
      ".inline-tabs-placeholder": "display: none !important",
      // Change this to the theme matching color
      ".split-view-view .visible": "background-color: #21252b !important"
    },
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "editor.smoothScrolling": true,
    "editor.fontLigatures": true,
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 15000,
    "window.commandCenter": false,
    "editor.scrollbar.vertical": "auto",
    "window.titleBarStyle": "custom",
    "editor.scrollbar.horizontal": "auto",
    "editor.lineHeight": 1.95,
    "markdown.preview.lineHeight": 5,
    "better-comments.tags": [
      {
        "tag": "!",
        "color": "#FF2D00",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "?",
        "color": "#3498DB",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "//",
        "color": "#474747",
        "strikethrough": true,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "todo",
        "color": "#FF8C00",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "*",
        "color": "#98C379",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      },
      {
        "tag": "@",
        "color": "#ffc0cb",
        "strikethrough": false,
        "underline": false,
        "backgroundColor": "transparent",
        "bold": false,
        "italic": false
      }
    ],
    "editor.mouseWheelZoom": true,
    "bracketPairColorizer.depreciation-notice": false,
    "workbench.editor.restoreViewState": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tokenColorCustomizations": {
      "[Sublime Material Theme - Dark]": {
        "textMateRules": [
          {
            "scope": [
              "comment.block",
              "punctuation.definition.comment.end",
              "punctuation.definition.comment.begin"
            ],
            "settings": {
              "foreground": "#706d6d",
              "fontStyle": "bold"
            }
          },
          {
            "scope": [
              "comment.block.documentation",
              "punctuation.definition.comment.begin.documentation",
              "punctuation.definition.comment.end.documentation"
            ],
            "settings": {
              "foreground": "#4b4b4b",
              "fontStyle": "bold"
            }
          },
          {
            "scope": ["comment.line", "punctuation.definition.comment"],
            "settings": {
              "foreground": "#868080ee",
              "fontStyle": "bold"
            }
          }
        ]
      },
  
      "[One Dark Pro Mix]": {
        "textMateRules": [
          {
            "scope": [
              "comment.block",
              "punctuation.definition.comment.end",
              "punctuation.definition.comment.begin"
            ],
            "settings": {
              "foreground": "#85b3f8",
              "fontStyle": "bold"
            }
          },
          {
            "scope": [
              "comment.block.documentation",
              "punctuation.definition.comment.begin.documentation",
              "punctuation.definition.comment.end.documentation"
            ],
            "settings": {
              "foreground": "#6bddb7",
              "fontStyle": "bold"
            }
          },
          {
            "scope": ["comment.line", "punctuation.definition.comment"],
            "settings": {
              "foreground": "#8b8040ee",
              "fontStyle": "bold"
            }
          }
        ]
      },
  
      "[Monokai]": {
        "textMateRules": [
          {
            "scope": [
              "comment.block",
              "punctuation.definition.comment.end",
              "punctuation.definition.comment.begin"
            ],
            "settings": {
              "foreground": "#85b3f8",
              "fontStyle": "bold"
            }
          },
          {
            "scope": [
              "comment.block.documentation",
              "punctuation.definition.comment.begin.documentation",
              "punctuation.definition.comment.end.documentation"
            ],
            "settings": {
              "foreground": "#6bddb7",
              "fontStyle": "bold"
            }
          },
          {
            "scope": ["comment.line", "punctuation.definition.comment"],
            "settings": {
              "foreground": "#8b8040ee",
              "fontStyle": "bold"
            }
          }
        ]
      },
  
      "[Monokai Extended]": {
        "textMateRules": [
          {
            "scope": [
              "comment.block",
              "punctuation.definition.comment.end",
              "punctuation.definition.comment.begin"
            ],
            "settings": {
              "foreground": "#85b3f8",
              "fontStyle": "bold"
            }
          },
          {
            "scope": [
              "comment.block.documentation",
              "punctuation.definition.comment.begin.documentation",
              "punctuation.definition.comment.end.documentation"
            ],
            "settings": {
              "foreground": "#6bddb7",
              "fontStyle": "bold"
            }
          },
          {
            "scope": ["comment.line", "punctuation.definition.comment"],
            "settings": {
              "foreground": "#8b8040ee",
              "fontStyle": "bold"
            }
          }
        ]
      }
    },
    "[java]": {
      "editor.defaultFormatter": "redhat.java"
    },
    "[python]": {
      "editor.defaultFormatter": "ms-python.python"
    },
    "[prisma]": {
      "editor.defaultFormatter": "Prisma.prisma"
    },
    "terminal.integrated.defaultProfile.linux": "fish",
    "workbench.colorCustomizations": {
      "editorCursor.foreground": "#919094",
      "terminalCursor.foreground": "#919094",
      "[One Dark Pro Mix]": {
        "editor.background": "#21252d",
        "terminal.background": "#21252d",
        "activityBar.background": "#21252d",
        "statusBar.background": "#21252d",
        "editorGroupHeader.tabsBackground": "#21252d",
        "tab.inactiveBackground": "#21252d"
      }
    },
    "workbench.editorAssociations": {
      "*.xlsx": "default"
    },
    "code-runner.runInTerminal": true,
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Attach, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -2 }",
    // this is to include the jsx autocompletion.
    "emmet.triggerExpansionOnTab": true,
    "emmet.includeLanguages": {
      "javascript": "javascriptreact"
    },
  
    "settingsSync.ignoredSettings": [],
    "terminal.integrated.smoothScrolling": true,
    "java.debug.settings.forceBuildBeforeLaunch": false,
    "git.autofetch": true,
    "leetcode.workspaceFolder": "C:\\Users\\piyush\\.leetcode",
    "search.useGlobalIgnoreFiles": true,
    "tabnine.experimentalAutoImports": true,
    "[cpp]": {
      "editor.defaultFormatter": "ms-vscode.cpptools"
    },
    "grunt.autoDetect": "on",
    "[html]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "editor.wordWrap": "on",
    "liveServer.settings.fullReload": true,
    "security.workspace.trust.untrustedFiles": "open",
    "editor.fontSize": 14,
    "terminal.integrated.fontSize": 14,
    "editor.fontFamily": "'Geist Mono', 'JetBrainsMono Nerd Font', Consolas, 'Courier New', monospace",
    "workbench.list.smoothScrolling": true,
    "terminal.explorerKind": "external",
    "terminal.external.linuxExec": "fish",
    "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font Mono",
    "chat.editor.fontFamily": "Geist Mono",
    "debug.console.fontFamily": "Geist Mono",
    "editor.codeLensFontFamily": "Geist Mono",
    "notebook.output.fontFamily": "Geist Mono",
    "markdown.preview.fontFamily": "Geist Mono",
    "editor.inlayHints.fontFamily": "Geist Mono",
    "editor.cursorBlinking": "expand",
    "rapidapi.terminalLink.enabled": false,
    "terminal.integrated.profiles.windows": {
      "PowerShell": {
        "source": "PowerShell",
        "icon": "terminal-powershell"
      },
      "Command Prompt": {
        "path": [
          "${env:windir}\\Sysnative\\cmd.exe",
          "${env:windir}\\System32\\cmd.exe"
        ],
        "args": [],
        "icon": "terminal-cmd"
      },
      "Git Bash": {
        "source": "Git Bash"
      },
      "Ubuntu (WSL)": {
        "path": "C:\\WINDOWS\\System32\\wsl.exe",
        "args": ["-d", "Ubuntu"]
      }
    },
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "editor.autoClosingBrackets": "always",
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "css.lint.unknownAtRules": "ignore",
    "[Log]": {
      "editor.fontSize": 14
    },
    "workbench.iconTheme": "moxer-icons",
    "typescript.format.semicolons": "insert",
    "javascript.format.semicolons": "insert",
    "editor.minimap.autohide": true,
    "editor.minimap.renderCharacters": false,
    "editor.inlineSuggest.enabled": true,
    "terminal.integrated.env.windows": {},
    "github.copilot.enable": {
      "*": true,
      "plaintext": false,
      "markdown": true,
      "scminput": false
    },
    "javascript.preferences.quoteStyle": "single",
    "typescript.preferences.quoteStyle": "single",
    "terminal.integrated.rightClickBehavior": "paste",
    "git.mergeEditor": true,
    "editor.cursorStyle": "block",
    "terminal.integrated.fontWeight": "normal",
    "editor.formatOnSave": true,
    "typescript.updateImportsOnFileMove.enabled": "never",
    "extensions.experimental.affinity": {
      "asvetliakov.vscode-neovim": 1
    },
    "files.exclude": {
      "**/.git": true,
      "**/.svn": true,
      "**/.hg": true,
      "**/CVS": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true,
      "**/node_modules": true,
      "**/.next": true,
      "**/.husky": true,
      "**/dist": true,
      "**/.todo.md": true,
      "**/.vscode": true,
      "**/.eslintrc.cjs": true,
      "**/.gitignore": true,
      "**/.lintstagedrc.mjs": true,
      "**/.markdownlint.json": true,
      "**/.markdownlintignore": true,
      "**/.prettierignore": true,
      "**/bun.lockb": true,
      "**/cspell.json": true,
      "**/package-lock.json": true,
      "**/pnpm-lock.yaml": true,
      "**/next-env.d.ts": true,
      "**/postcss.config.cjs": true,
      "**/prettier.config.js": true,
      "**/README.md": true,
      "**/next.config.js": true,
      "**/migrate.ts": true,
      "**/.env.example": true
    },
    "workbench.startupEditor": "none",
    "explorer.compactFolders": false,
    "editor.tabSize": 2,
    "editor.linkedEditing": true,
    // "breadcrumbs.filePath": "off",
    "files.trimTrailingWhitespace": true,
    "[markdown]": {
      "files.trimTrailingWhitespace": false
    },
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "window.zoomLevel": 0.9,
    "workbench.editor.enablePreview": false,
    "workbench.colorTheme": "One Dark Pro Mix",
    "whichkey.sortOrder": "alphabetically",
    "whichkey.delay": 300,
    "whichkey.bindings": [
      {
        "key": "w",
        "name": "Save file",
        "type": "command",
        "command": "workbench.action.files.save"
      },
      {
        "key": "q",
        "name": "Close file",
        "type": "command",
        "command": "workbench.action.closeActiveEditor"
      },
      {
        "key": ";",
        "name": "commands",
        "type": "command",
        "command": "workbench.action.showCommands"
      },
      {
        "key": "?",
        "name": "View All References",
        "type": "command",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider"
      },
      {
        "key": "b",
        "name": "Buffers/Editors...",
        "type": "bindings",
        "bindings": [
          {
            "key": "b",
            "name": "Show all buffers/editors",
            "type": "command",
            "command": "workbench.action.showAllEditors"
          },
          {
            "key": "d",
            "name": "Close active editor",
            "type": "command",
            "command": "workbench.action.closeActiveEditor"
          },
          {
            "key": "h",
            "name": "Move editor into left group",
            "type": "command",
            "command": "workbench.action.moveEditorToLeftGroup"
          },
          {
            "key": "j",
            "name": "Move editor into below group",
            "type": "command",
            "command": "workbench.action.moveEditorToBelowGroup"
          },
          {
            "key": "k",
            "name": "Move editor into above group",
            "type": "command",
            "command": "workbench.action.moveEditorToAboveGroup"
          },
          {
            "key": "l",
            "name": "Move editor into right group",
            "type": "command",
            "command": "workbench.action.moveEditorToRightGroup"
          },
          {
            "key": "m",
            "name": "Close other editors",
            "type": "command",
            "command": "workbench.action.closeOtherEditors"
          },
          {
            "key": "n",
            "name": "Next editor",
            "type": "command",
            "command": "workbench.action.nextEditor"
          },
          {
            "key": "p",
            "name": "Previous editor",
            "type": "command",
            "command": "workbench.action.previousEditor"
          },
          {
            "key": "N",
            "name": "New untitled editor",
            "type": "command",
            "command": "workbench.action.files.newUntitledFile"
          },
          {
            "key": "u",
            "name": "Reopen closed editor",
            "type": "command",
            "command": "workbench.action.reopenClosedEditor"
          },
          {
            "key": "y",
            "name": "Copy buffer to clipboard",
            "type": "commands",
            "commands": [
              "editor.action.selectAll",
              "editor.action.clipboardCopyAction",
              "cancelSelection"
            ]
          }
        ]
      },
      {
        "key": "d",
        "name": "Debug...",
        "type": "bindings",
        "bindings": [
          {
            "key": "d",
            "name": "Start debug",
            "type": "command",
            "command": "workbench.action.debug.start"
          },
          {
            "key": "S",
            "name": "Stop debug",
            "type": "command",
            "command": "workbench.action.debug.stop"
          },
          {
            "key": "c",
            "name": "Continue debug",
            "type": "command",
            "command": "workbench.action.debug.continue"
          },
          {
            "key": "p",
            "name": "Pause debug",
            "type": "command",
            "command": "workbench.action.debug.pause"
          },
          {
            "key": "r",
            "name": "Run without debugging",
            "type": "command",
            "command": "workbench.action.debug.run"
          },
          {
            "key": "R",
            "name": "Restart debug",
            "type": "command",
            "command": "workbench.action.debug.restart"
          },
          {
            "key": "i",
            "name": "Step into",
            "type": "command",
            "command": "workbench.action.debug.stepInto"
          },
          {
            "key": "s",
            "name": "Step over",
            "type": "command",
            "command": "workbench.action.debug.stepOver"
          },
          {
            "key": "o",
            "name": "Step out",
            "type": "command",
            "command": "workbench.action.debug.stepOut"
          },
          {
            "key": "b",
            "name": "Toggle breakpoint",
            "type": "command",
            "command": "editor.debug.action.toggleBreakpoint"
          },
          {
            "key": "B",
            "name": "Toggle inline breakpoint",
            "type": "command",
            "command": "editor.debug.action.toggleInlineBreakpoint"
          },
          {
            "key": "j",
            "name": "Jump to cursor",
            "type": "command",
            "command": "debug.jumpToCursor"
          },
          {
            "key": "v",
            "name": "REPL",
            "type": "command",
            "command": "workbench.debug.action.toggleRepl"
          },
          {
            "key": "w",
            "name": "Focus on watch window",
            "type": "command",
            "command": "workbench.debug.action.focusWatchView"
          },
          {
            "key": "W",
            "name": "Add to watch",
            "type": "command",
            "command": "editor.debug.action.selectionToWatch"
          }
        ]
      },
      {
        "key": "e",
        "name": "Toggle Explorer",
        "type": "command",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "f",
        "name": "Find & Replace...",
        "type": "bindings",
        "bindings": [
          {
            "key": "f",
            "name": "File",
            "type": "command",
            "command": "editor.action.startFindReplaceAction"
          },
          {
            "key": "s",
            "name": "Symbol",
            "type": "command",
            "command": "editor.action.rename",
            "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
          },
          {
            "key": "p",
            "name": "Project",
            "type": "command",
            "command": "workbench.action.replaceInFiles"
          }
        ]
      },
      {
        "key": "g",
        "name": "Git...",
        "type": "bindings",
        "bindings": [
          {
            "key": "/",
            "name": "Search Commits",
            "command": "gitlens.showCommitSearch",
            "type": "command",
            "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
          },
          {
            "key": "a",
            "name": "Stage",
            "type": "command",
            "command": "git.stage"
          },
          {
            "key": "b",
            "name": "Checkout",
            "type": "command",
            "command": "git.checkout"
          },
          {
            "key": "B",
            "name": "Browse",
            "type": "command",
            "command": "gitlens.openFileInRemote"
          },
          {
            "key": "c",
            "name": "Commit",
            "type": "command",
            "command": "git.commit"
          },
          {
            "key": "C",
            "name": "Cherry Pick",
            "type": "command",
            "command": "gitlens.views.cherryPick"
          },
          {
            "key": "d",
            "name": "Delete Branch",
            "type": "command",
            "command": "git.deleteBranch"
          },
          {
            "key": "f",
            "name": "Fetch",
            "type": "command",
            "command": "git.fetch"
          },
          {
            "key": "F",
            "name": "Pull From",
            "type": "command",
            "command": "git.pullFrom"
          },
          {
            "key": "g",
            "name": "Graph",
            "type": "command",
            "command": "git-graph.view"
          },
          {
            "key": "h",
            "name": "Heatmap",
            "type": "command",
            "command": "gitlens.toggleFileHeatmap"
          },
          {
            "key": "H",
            "name": "History",
            "type": "command",
            "command": "git.viewFileHistory"
          },
          {
            "key": "i",
            "name": "Init",
            "type": "command",
            "command": "git.init"
          },
          {
            "key": "j",
            "name": "Next Change",
            "type": "command",
            "command": "workbench.action.editor.nextChange"
          },
          {
            "key": "k",
            "name": "Previous Change",
            "type": "command",
            "command": "workbench.action.editor.previousChange"
          },
          {
            "key": "l",
            "name": "Toggle Line Blame",
            "type": "command",
            "command": "gitlens.toggleLineBlame",
            "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
          },
          {
            "key": "L",
            "name": "Toggle GitLens",
            "type": "command",
            "command": "gitlens.toggleCodeLens",
            "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
          },
          {
            "key": "m",
            "name": "Merge",
            "type": "command",
            "command": "git.merge"
          },
          {
            "key": "p",
            "name": "Push",
            "type": "command",
            "command": "git.push"
          },
          {
            "key": "P",
            "name": "Pull",
            "type": "command",
            "command": "git.pull"
          },
          {
            "key": "s",
            "name": "Stash",
            "type": "command",
            "command": "workbench.view.scm"
          },
          {
            "key": "S",
            "name": "Status",
            "type": "command",
            "command": "gitlens.showQuickRepoStatus",
            "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
          },
          {
            "key": "t",
            "name": "Create Tag",
            "type": "command",
            "command": "git.createTag"
          },
          {
            "key": "T",
            "name": "Delete Tag",
            "type": "command",
            "command": "git.deleteTag"
          },
          {
            "key": "U",
            "name": "Unstage",
            "type": "command",
            "command": "git.unstage"
          }
        ]
      },
      {
        "key": "h",
        "name": "Split Horizontal",
        "type": "command",
        "command": "workbench.action.splitEditorDown"
      },
      {
        "key": "i",
        "name": "Insert...",
        "type": "bindings",
        "bindings": [
          {
            "key": "j",
            "name": "Insert line below",
            "type": "command",
            "command": "editor.action.insertLineAfter"
          },
          {
            "key": "k",
            "name": "Insert line above",
            "type": "command",
            "command": "editor.action.insertLineBefore"
          },
          {
            "key": "s",
            "name": "Insert snippet",
            "type": "command",
            "command": "editor.action.insertSnippet"
          }
        ]
      },
      {
        "key": "l",
        "name": "LSP...",
        "type": "bindings",
        "bindings": [
          {
            "key": ";",
            "name": "Refactor",
            "type": "command",
            "command": "editor.action.refactor",
            "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
          },
          {
            "key": "a",
            "name": "Auto Fix",
            "type": "command",
            "command": "editor.action.autoFix",
            "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
          },
          {
            "key": "d",
            "name": "Definition",
            "type": "command",
            "command": "editor.action.revealDefinition",
            "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
          },
          {
            "key": "D",
            "name": "Declaration",
            "type": "command",
            "command": "editor.action.revealDeclaration"
          },
          {
            "key": "e",
            "name": "Errors",
            "type": "command",
            "command": "workbench.actions.view.problems"
          },
          {
            "key": "f",
            "name": "Format",
            "type": "command",
            "command": "editor.action.formatDocument",
            "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
          },
          {
            "key": "i",
            "name": "Implementation",
            "type": "command",
            "command": "editor.action.goToImplementation",
            "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
          },
          {
            "key": "l",
            "name": "Code Lens",
            "type": "command",
            "command": "codelens.showLensesInCurrentLine"
          },
          {
            "key": "n",
            "name": "Next Problem",
            "type": "command",
            "command": "editor.action.marker.next",
            "when": "editorFocus"
          },
          {
            "key": "N",
            "name": "Next Problem (Proj)",
            "type": "command",
            "command": "editor.action.marker.nextInFiles",
            "when": "editorFocus"
          },
          {
            "key": "o",
            "name": "Outline",
            "type": "command",
            "command": "outline.focus"
          },
          {
            "key": "p",
            "name": "Prev Problem",
            "type": "command",
            "command": "editor.action.marker.prevInFiles",
            "when": "editorFocus"
          },
          {
            "key": "P",
            "name": "Prev Problem (Proj)",
            "type": "command",
            "command": "editor.action.marker.prev",
            "when": "editorFocus"
          },
          {
            "key": "q",
            "name": "Quick Fix",
            "type": "command",
            "command": "editor.action.quickFix",
            "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
          },
          {
            "key": "r",
            "name": "References",
            "type": "command",
            "command": "editor.action.goToReferences",
            "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
          },
          {
            "key": "R",
            "name": "Rename",
            "type": "command",
            "command": "editor.action.rename",
            "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
          },
          {
            "key": "v",
            "name": "View All References",
            "type": "command",
            "command": "references-view.find",
            "when": "editorHasReferenceProvider"
          },
          {
            "key": "s",
            "name": "Go To Symbol",
            "type": "command",
            "command": "workbench.action.gotoSymbol"
          },
          {
            "key": "S",
            "name": "Show All Symbols",
            "type": "command",
            "command": "workbench.action.showAllSymbols"
          }
        ]
      },
      {
        "key": "m",
        "name": "Mark...",
        "type": "bindings",
        "bindings": [
          {
            "key": "c",
            "name": "Clear Bookmarks",
            "type": "command",
            "command": "bookmarks.clear"
          },
          {
            "key": "j",
            "name": "Next Bookmark",
            "type": "command",
            "command": "bookmarks.jumpToNext",
            "when": "editorTextFocus"
          },
          {
            "key": "k",
            "name": "Previous Bookmark",
            "type": "command",
            "command": "bookmarks.jumpToPrevious",
            "when": "editorTextFocus"
          },
          {
            "key": "l",
            "name": "List Bookmarks",
            "type": "command",
            "command": "bookmarks.listFromAllFiles",
            "when": "editorTextFocus"
          },
          {
            "key": "r",
            "name": "Refresh Bookmarks",
            "type": "command",
            "command": "bookmarks.refresh"
          },
          {
            "key": "t",
            "name": "Toggle Bookmark",
            "type": "command",
            "command": "bookmarks.toggle",
            "when": "editorTextFocus"
          },
          {
            "key": "s",
            "name": "Show Bookmarks",
            "type": "command",
            "command": "workbench.view.extension.bookmarks"
          }
        ]
      },
      {
        "key": "M",
        "name": "Minimap",
        "type": "command",
        "command": "editor.action.toggleMinimap"
      },
      {
        "key": "n",
        "name": "No Highlight",
        "type": "command",
        "command": "vscode-neovim.send",
        "args": ":noh<CR>"
      },
      {
        "key": "o",
        "name": "Open...",
        "type": "bindings",
        "bindings": [
          {
            "key": "d",
            "name": "Directory",
            "type": "command",
            "command": "workbench.action.files.openFolder"
          },
          {
            "key": "r",
            "name": "Recent",
            "type": "command",
            "command": "workbench.action.openRecent"
          },
          {
            "key": "f",
            "name": "File",
            "type": "command",
            "command": "workbench.action.files.openFile"
          }
        ]
      },
      {
        "key": "p",
        "name": "Peek...",
        "type": "bindings",
        "bindings": [
          {
            "key": "d",
            "name": "Definition",
            "type": "command",
            "command": "editor.action.peekDefinition",
            "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
          },
          {
            "key": "D",
            "name": "Declaration",
            "type": "command",
            "command": "editor.action.peekDeclaration"
          },
          {
            "key": "i",
            "name": "Implementation",
            "type": "command",
            "command": "editor.action.peekImplementation",
            "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
          },
          {
            "key": "p",
            "name": "Toggle Focus",
            "type": "command",
            "command": "togglePeekWidgetFocus",
            "when": "inReferenceSearchEditor || referenceSearchVisible"
          },
          {
            "key": "r",
            "name": "References",
            "type": "command",
            "command": "editor.action.referenceSearch.trigger"
          },
          {
            "key": "t",
            "name": "Type Definition",
            "type": "command",
            "command": "editor.action.peekTypeDefinition"
          }
        ]
      },
      {
        "key": "s",
        "name": "Search...",
        "type": "bindings",
        "bindings": [
          {
            "key": "f",
            "name": "Files",
            "type": "command",
            "command": "workbench.action.quickOpen"
          },
          {
            "key": "t",
            "name": "Text",
            "type": "command",
            "command": "workbench.action.findInFiles"
          }
        ]
      },
      {
        "key": "S",
        "name": "Show...",
        "type": "bindings",
        "bindings": [
          {
            "key": "e",
            "name": "Show explorer",
            "type": "command",
            "command": "workbench.view.explorer"
          },
          {
            "key": "s",
            "name": "Show search",
            "type": "command",
            "command": "workbench.view.search"
          },
          {
            "key": "g",
            "name": "Show source control",
            "type": "command",
            "command": "workbench.view.scm"
          },
          {
            "key": "t",
            "name": "Show test",
            "type": "command",
            "command": "workbench.view.extension.test"
          },
          {
            "key": "r",
            "name": "Show remote explorer",
            "type": "command",
            "command": "workbench.view.remote"
          },
          {
            "key": "x",
            "name": "Show extensions",
            "type": "command",
            "command": "workbench.view.extensions"
          },
          {
            "key": "p",
            "name": "Show problem",
            "type": "command",
            "command": "workbench.actions.view.problems"
          },
          {
            "key": "o",
            "name": "Show output",
            "type": "command",
            "command": "workbench.action.output.toggleOutput"
          },
          {
            "key": "d",
            "name": "Show debug console",
            "type": "command",
            "command": "workbench.debug.action.toggleRepl"
          }
        ]
      },
      {
        "key": "t",
        "name": "Terminal...",
        "type": "bindings",
        "bindings": [
          {
            "key": "t",
            "name": "Toggle Terminal",
            "type": "command",
            "command": "workbench.action.togglePanel"
          },
          {
            "key": "T",
            "name": "Focus Terminal",
            "type": "command",
            "command": "workbench.action.terminal.toggleTerminal",
            "when": "!terminalFocus"
          }
        ]
      },
      {
        "key": "u",
        "name": "UI toggles...",
        "type": "bindings",
        "bindings": [
          {
            "key": "a",
            "name": "Toggle tool/activity bar visibility",
            "type": "command",
            "command": "workbench.action.toggleActivityBarVisibility"
          },
          {
            "key": "b",
            "name": "Toggle side bar visibility",
            "type": "command",
            "command": "workbench.action.toggleSidebarVisibility"
          },
          {
            "key": "j",
            "name": "Toggle panel visibility",
            "type": "command",
            "command": "workbench.action.togglePanel"
          },
          {
            "key": "F",
            "name": "Toggle full screen",
            "type": "command",
            "command": "workbench.action.toggleFullScreen"
          },
          {
            "key": "s",
            "name": "Select theme",
            "type": "command",
            "command": "workbench.action.selectTheme"
          },
          {
            "key": "m",
            "name": "Toggle maximized panel",
            "type": "command",
            "command": "workbench.action.toggleMaximizedPanel"
          },
          {
            "key": "T",
            "name": "Toggle tab visibility",
            "type": "command",
            "command": "workbench.action.toggleTabsVisibility"
          }
        ]
      },
      {
        "key": "v",
        "name": "Split Vertical",
        "type": "command",
        "command": "workbench.action.splitEditor"
      },
      {
        "key": "w",
        "name": "Window...",
        "type": "bindings",
        "bindings": [
          {
            "key": "W",
            "name": "Focus previous editor group",
            "type": "command",
            "command": "workbench.action.focusPreviousGroup"
          },
          {
            "key": "h",
            "name": "Move editor group left",
            "type": "command",
            "command": "workbench.action.moveActiveEditorGroupLeft"
          },
          {
            "key": "j",
            "name": "Move editor group down",
            "type": "command",
            "command": "workbench.action.moveActiveEditorGroupDown"
          },
          {
            "key": "k",
            "name": "Move editor group up",
            "type": "command",
            "command": "workbench.action.moveActiveEditorGroupUp"
          },
          {
            "key": "l",
            "name": "Move editor group right",
            "type": "command",
            "command": "workbench.action.moveActiveEditorGroupRight"
          },
          {
            "key": "t",
            "name": "Toggle editor group sizes",
            "type": "command",
            "command": "workbench.action.toggleEditorWidths"
          },
          {
            "key": "m",
            "name": "Maximize editor group",
            "type": "command",
            "command": "workbench.action.minimizeOtherEditors"
          },
          {
            "key": "M",
            "name": "Maximize editor group and hide side bar",
            "type": "command",
            "command": "workbench.action.maximizeEditor"
          },
          {
            "key": "=",
            "name": "Reset editor group sizes",
            "type": "command",
            "command": "workbench.action.evenEditorWidths"
          },
          {
            "key": "z",
            "name": "Combine all editors",
            "type": "command",
            "command": "workbench.action.joinAllGroups"
          },
          {
            "key": "d",
            "name": "Close editor group",
            "type": "command",
            "command": "workbench.action.closeEditorsInGroup"
          },
          {
            "key": "x",
            "name": "Close all editor groups",
            "type": "command",
            "command": "workbench.action.closeAllGroups"
          }
        ]
      },
      {
        "key": "x",
        "name": "Extensions",
        "type": "command",
        "command": "workbench.view.extensions"
      },
      {
        "key": "y",
        "name": "Sync...",
        "type": "bindings",
        "bindings": [
          {
            "key": "d",
            "name": "Download Settings",
            "type": "command",
            "command": "extension.downloadSettings"
          },
          {
            "key": "u",
            "name": "Upload Settings",
            "type": "command",
            "command": "extension.updateSettings"
          }
        ]
      },
      {
        "key": "z",
        "name": "Toggle zen mode",
        "type": "command",
        "command": "workbench.action.toggleZenMode"
      }
    ],
    "window.menuBarVisibility": "hidden",
    "workbench.layoutControl.enabled": false,
    "workbench.activityBar.location": "hidden"
  }
  