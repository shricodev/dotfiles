# Remove all default keybindings
unbind-key -a

# Window selection bindings
bind 0 select-window -t 0
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 9

# Improve colors
set -g default-terminal "xterm-256color"
set -sg terminal-overrides ",*:RGB"

# Pane selection and resizing
set-window-option -g mode-keys vi

set -g @cursor-style block

# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Set the lock command
set -g lock-command vlock

# Copy mode
bind-key [ copy-mode

# remove delay for exiting insert mode with ESC in Neovim
set -sg escape-time 0

# Configure Tmux
set -g status-position bottom
set -g status-style "bg=#{@thm_bg}"

# Lock server with Ctrl+X
bind ^X lock-server

# Session management
bind o new-window -c "$HOME"
bind-key O command-prompt "new-session -s '%%'"

bind ^D detach

bind p previous-window
bind n next-window

bind r command-prompt "rename-window %%"

# Window splitting
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"

bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"

bind -r m resize-pane -Z

# Pane navigation and management
# bind '"' choose-window
bind : command-prompt
bind * setw synchronize-panes
bind-key c kill-pane

bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1

bind '/' swap-pane -D

# Session selection
# default way of session selection intact with S
bind S choose-session

# These two are pretty much the same
# bind-key s display-popup -E "sesh connect $(sesh list | fzf)"
bind-key s display-popup -E "sesh list | fzf --header jump-to-session | xargs tmux switch-client -t"

# Configuration reloading
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf reloaded"

# Allow using mouse
set -g mouse on

bind -r J resize-pane -D  5
bind -r K resize-pane -U  5
bind -r L resize-pane -R  5
bind -r H resize-pane -L  5

# break pane out of window
bind-key B break-pane -d

# Clock and prefix settings
set -g clock-mode-style 12

# Don't exit tmux when detaching a session
set -g detach-on-destroy off

# Increase the history limit to 15000 from 2000
set -g history-limit 15000

# Use system clipboard
set -g set-clipboard on

# If the window is renamed manually and want to rename it back to the application that is running
bind ^C set-window-option automatic-rename on

# bind-key C kill-window
bind-key C confirm-before -p "kill-window: #W? (y/n)" kill-window

# keybindings for copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Rebind 'Escape' to clear selection in visual mode
bind-key -T copy-mode-vi Escape send-keys -X clear-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# don't exit copy mode when dragging with mouse
# unbind -T copy-mode-vi MouseDragEnd1Pane

# Alternate session
# Switch between the last 2 tmux sessions, similar to 'cd -' in the terminal
# I use this in combination with the `choose-tree` to sort sessions by time
# Otherwise, by default, sessions are sorted by name, and that makes no sense
# -l stands for `last session`, see `man tmux`
# unbind Space
bind-key Space switch-client -l

# Border lines between panes are thicker
# single -> single lines using ACS or UTF-8 characters
# double -> double lines using UTF-8 characters
# heavy  -> heavy lines using UTF-8 characters
# simple -> simple ASCII characters
# number -> the pane number
set -g pane-border-lines single

# Indicate active pane by colouring only half of the border in windows with 
# exactly two panes, by displaying arrow markers, by drawing both or neither.
# [off | colour | arrows | both]
set -g pane-border-indicators colour

# Enables tracking of focus events, allows tmux to respond when the terminal
# window gains or looses focus
set-option -g focus-events on

# open lazygit in a new window with prefix+g
bind-key g new-window -n lazygit -c "#{pane_current_path}" "lazygit"

# unbind C-b
set -g prefix M-m
bind M-m send-prefix

# unbind %

# Window and pane indices
set -g base-index  1
set -g pane-base-index  1
set-window-option -g pane-base-index  1
set-option -g renumber-windows on

set-option -g allow-rename on

# For Yazi to have image preview working with tmux.
set -g allow-passthrough on

# set -ga update-environment TERM
# set -ga update-environment TERM_PROGRAM
# END config for Yazi.

# This is handled with sesh
# bind-key -r S run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# Toggle tmux status bar
bind ';' set status
if-shell "[[ $(tmux lsw | wc -l) -le 1 ]]" 'set -g status'

set -g status on

# Status line position
set -g status-position bottom

# Custom window flags
# window_default_symbol ''
# window_active_symbol '*'
# window_activity_symbol '#'
# window_bell_symbol '!'
# window_last_symbol '-'
# window_silence_symbol '~'
# window_zoomed_symbol 'Z'

# status left look and feel
# Status line customisation
set-option -g status-left-length 200
set-option -g status-right-length 100
set-option -g status-left "#[fg=colour247]#{session_name} • "
# add git branch to status line
set-option -g status-style "bg=default"
set -g status-right "#[fg=colour222] #{pane_current_command} | #(basename #{pane_current_path})#(cd #{pane_current_path} && git rev-parse --is-inside-work-tree >/dev/null 2>&1 && echo ' | ' $(git rev-parse --abbrev-ref HEAD)) | #[fg=colour247]%Y-%m-%d %a 󰅐 %I:%M %p"
set-option -g window-status-format "#{window_index}:#{window_name}#{window_flags} " 
set-option -g window-status-current-format "#{window_index}:#{window_name}#{window_flags} "
set-option -g window-status-current-style "fg=#e1a345" 
set-option -g window-status-last-style "fg=#936a2e"
set-option -g window-status-activity-style none

set message-style "fg=#6e6a86,bg=#232136"
set message-command-style "fg=#232136,bg=#f6c177"

# bootstrap tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# display windows in the current session
bind "w" display-popup -w 60 -h 10 -E "\
    tmux list-windows -F '#{window_index} #{window_name}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-window |\
    cut -d ' ' -f 1 |\
    xargs tmux select-window -t"

# https://github.com/leelavg/dotfiles/blob/897aa883a/config/tmux.conf#L30-L39
# https://scripter.co/command-to-every-pane-window-session-in-tmux/
# Send the same command to all panes/windows in current session
    bind M-e command-prompt -p "Command:" \
      "run \"tmux list-panes -s -F '##{session_name}:##{window_index}.##{pane_index}' \
      | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Send the same command to all panes/windows/sessions
      bind M-E command-prompt -p "Command:" \
        "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
        | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Initialize TPM (Tmux Plugin Manager) and other plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Configure Tmux-Resurrect
set -g @resurrect-capture-pane-contents 'on'

# Configure Tmux-Continuum
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
